// This file was generated by a tool:
// https://github.com/holmak/opengl-loader
//
// GL versions included:
//   GL_VERSION_1_0
//   GL_VERSION_1_1
//   GL_VERSION_1_2
//   GL_VERSION_1_3
//   GL_VERSION_1_4
//   GL_VERSION_1_5
//   GL_VERSION_2_0
//   GL_VERSION_2_1
//   GL_VERSION_3_0
//   GL_VERSION_3_1
//   GL_VERSION_3_2
//   GL_VERSION_3_3
//
// GL extensions included:
//   GL_KHR_debug

#include "khrplatform.h"

typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef void GLvoid;
typedef khronos_int8_t GLbyte;
typedef khronos_uint8_t GLubyte;
typedef khronos_int16_t GLshort;
typedef khronos_uint16_t GLushort;
typedef int GLint;
typedef unsigned int GLuint;
typedef khronos_int32_t GLclampx;
typedef int GLsizei;
typedef khronos_float_t GLfloat;
typedef khronos_float_t GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void *GLeglClientBufferEXT;
typedef void *GLeglImageOES;
typedef char GLchar;
typedef char GLcharARB;
#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif
typedef khronos_uint16_t GLhalf;
typedef khronos_uint16_t GLhalfARB;
typedef khronos_int32_t GLfixed;
typedef khronos_intptr_t GLintptr;
typedef khronos_intptr_t GLintptrARB;
typedef khronos_ssize_t GLsizeiptr;
typedef khronos_ssize_t GLsizeiptrARB;
typedef khronos_int64_t GLint64;
typedef khronos_int64_t GLint64EXT;
typedef khronos_uint64_t GLuint64;
typedef khronos_uint64_t GLuint64EXT;
typedef struct __GLsync *GLsync;
struct _cl_context;
struct _cl_event;
typedef void ( *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void ( *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void ( *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void ( *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);
typedef unsigned short GLhalfNV;
typedef GLintptr GLvdpauSurfaceNV;
typedef void ( *GLVULKANPROCNV)(void);

#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_FALSE 0x00000000
#define GL_TRUE 0x00000001
#define GL_POINTS 0x00000000
#define GL_LINES 0x00000001
#define GL_LINE_LOOP 0x00000002
#define GL_LINE_STRIP 0x00000003
#define GL_TRIANGLES 0x00000004
#define GL_TRIANGLE_STRIP 0x00000005
#define GL_TRIANGLE_FAN 0x00000006
#define GL_NEVER 0x00000200
#define GL_LESS 0x00000201
#define GL_EQUAL 0x00000202
#define GL_LEQUAL 0x00000203
#define GL_GREATER 0x00000204
#define GL_NOTEQUAL 0x00000205
#define GL_GEQUAL 0x00000206
#define GL_ALWAYS 0x00000207
#define GL_ZERO 0x00000000
#define GL_ONE 0x00000001
#define GL_SRC_COLOR 0x00000300
#define GL_ONE_MINUS_SRC_COLOR 0x00000301
#define GL_SRC_ALPHA 0x00000302
#define GL_ONE_MINUS_SRC_ALPHA 0x00000303
#define GL_DST_ALPHA 0x00000304
#define GL_ONE_MINUS_DST_ALPHA 0x00000305
#define GL_DST_COLOR 0x00000306
#define GL_ONE_MINUS_DST_COLOR 0x00000307
#define GL_SRC_ALPHA_SATURATE 0x00000308
#define GL_NONE 0x00000000
#define GL_FRONT_LEFT 0x00000400
#define GL_FRONT_RIGHT 0x00000401
#define GL_BACK_LEFT 0x00000402
#define GL_BACK_RIGHT 0x00000403
#define GL_FRONT 0x00000404
#define GL_BACK 0x00000405
#define GL_LEFT 0x00000406
#define GL_RIGHT 0x00000407
#define GL_FRONT_AND_BACK 0x00000408
#define GL_NO_ERROR 0x00000000
#define GL_INVALID_ENUM 0x00000500
#define GL_INVALID_VALUE 0x00000501
#define GL_INVALID_OPERATION 0x00000502
#define GL_OUT_OF_MEMORY 0x00000505
#define GL_CW 0x00000900
#define GL_CCW 0x00000901
#define GL_POINT_SIZE 0x00000B11
#define GL_POINT_SIZE_RANGE 0x00000B12
#define GL_POINT_SIZE_GRANULARITY 0x00000B13
#define GL_LINE_SMOOTH 0x00000B20
#define GL_LINE_WIDTH 0x00000B21
#define GL_LINE_WIDTH_RANGE 0x00000B22
#define GL_LINE_WIDTH_GRANULARITY 0x00000B23
#define GL_POLYGON_MODE 0x00000B40
#define GL_POLYGON_SMOOTH 0x00000B41
#define GL_CULL_FACE 0x00000B44
#define GL_CULL_FACE_MODE 0x00000B45
#define GL_FRONT_FACE 0x00000B46
#define GL_DEPTH_RANGE 0x00000B70
#define GL_DEPTH_TEST 0x00000B71
#define GL_DEPTH_WRITEMASK 0x00000B72
#define GL_DEPTH_CLEAR_VALUE 0x00000B73
#define GL_DEPTH_FUNC 0x00000B74
#define GL_STENCIL_TEST 0x00000B90
#define GL_STENCIL_CLEAR_VALUE 0x00000B91
#define GL_STENCIL_FUNC 0x00000B92
#define GL_STENCIL_VALUE_MASK 0x00000B93
#define GL_STENCIL_FAIL 0x00000B94
#define GL_STENCIL_PASS_DEPTH_FAIL 0x00000B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x00000B96
#define GL_STENCIL_REF 0x00000B97
#define GL_STENCIL_WRITEMASK 0x00000B98
#define GL_VIEWPORT 0x00000BA2
#define GL_DITHER 0x00000BD0
#define GL_BLEND_DST 0x00000BE0
#define GL_BLEND_SRC 0x00000BE1
#define GL_BLEND 0x00000BE2
#define GL_LOGIC_OP_MODE 0x00000BF0
#define GL_DRAW_BUFFER 0x00000C01
#define GL_READ_BUFFER 0x00000C02
#define GL_SCISSOR_BOX 0x00000C10
#define GL_SCISSOR_TEST 0x00000C11
#define GL_COLOR_CLEAR_VALUE 0x00000C22
#define GL_COLOR_WRITEMASK 0x00000C23
#define GL_DOUBLEBUFFER 0x00000C32
#define GL_STEREO 0x00000C33
#define GL_LINE_SMOOTH_HINT 0x00000C52
#define GL_POLYGON_SMOOTH_HINT 0x00000C53
#define GL_UNPACK_SWAP_BYTES 0x00000CF0
#define GL_UNPACK_LSB_FIRST 0x00000CF1
#define GL_UNPACK_ROW_LENGTH 0x00000CF2
#define GL_UNPACK_SKIP_ROWS 0x00000CF3
#define GL_UNPACK_SKIP_PIXELS 0x00000CF4
#define GL_UNPACK_ALIGNMENT 0x00000CF5
#define GL_PACK_SWAP_BYTES 0x00000D00
#define GL_PACK_LSB_FIRST 0x00000D01
#define GL_PACK_ROW_LENGTH 0x00000D02
#define GL_PACK_SKIP_ROWS 0x00000D03
#define GL_PACK_SKIP_PIXELS 0x00000D04
#define GL_PACK_ALIGNMENT 0x00000D05
#define GL_MAX_TEXTURE_SIZE 0x00000D33
#define GL_MAX_VIEWPORT_DIMS 0x00000D3A
#define GL_SUBPIXEL_BITS 0x00000D50
#define GL_TEXTURE_1D 0x00000DE0
#define GL_TEXTURE_2D 0x00000DE1
#define GL_TEXTURE_WIDTH 0x00001000
#define GL_TEXTURE_HEIGHT 0x00001001
#define GL_TEXTURE_BORDER_COLOR 0x00001004
#define GL_DONT_CARE 0x00001100
#define GL_FASTEST 0x00001101
#define GL_NICEST 0x00001102
#define GL_BYTE 0x00001400
#define GL_UNSIGNED_BYTE 0x00001401
#define GL_SHORT 0x00001402
#define GL_UNSIGNED_SHORT 0x00001403
#define GL_INT 0x00001404
#define GL_UNSIGNED_INT 0x00001405
#define GL_FLOAT 0x00001406
#define GL_CLEAR 0x00001500
#define GL_AND 0x00001501
#define GL_AND_REVERSE 0x00001502
#define GL_COPY 0x00001503
#define GL_AND_INVERTED 0x00001504
#define GL_NOOP 0x00001505
#define GL_XOR 0x00001506
#define GL_OR 0x00001507
#define GL_NOR 0x00001508
#define GL_EQUIV 0x00001509
#define GL_INVERT 0x0000150A
#define GL_OR_REVERSE 0x0000150B
#define GL_COPY_INVERTED 0x0000150C
#define GL_OR_INVERTED 0x0000150D
#define GL_NAND 0x0000150E
#define GL_SET 0x0000150F
#define GL_TEXTURE 0x00001702
#define GL_COLOR 0x00001800
#define GL_DEPTH 0x00001801
#define GL_STENCIL 0x00001802
#define GL_STENCIL_INDEX 0x00001901
#define GL_DEPTH_COMPONENT 0x00001902
#define GL_RED 0x00001903
#define GL_GREEN 0x00001904
#define GL_BLUE 0x00001905
#define GL_ALPHA 0x00001906
#define GL_RGB 0x00001907
#define GL_RGBA 0x00001908
#define GL_POINT 0x00001B00
#define GL_LINE 0x00001B01
#define GL_FILL 0x00001B02
#define GL_KEEP 0x00001E00
#define GL_REPLACE 0x00001E01
#define GL_INCR 0x00001E02
#define GL_DECR 0x00001E03
#define GL_VENDOR 0x00001F00
#define GL_RENDERER 0x00001F01
#define GL_VERSION 0x00001F02
#define GL_EXTENSIONS 0x00001F03
#define GL_NEAREST 0x00002600
#define GL_LINEAR 0x00002601
#define GL_NEAREST_MIPMAP_NEAREST 0x00002700
#define GL_LINEAR_MIPMAP_NEAREST 0x00002701
#define GL_NEAREST_MIPMAP_LINEAR 0x00002702
#define GL_LINEAR_MIPMAP_LINEAR 0x00002703
#define GL_TEXTURE_MAG_FILTER 0x00002800
#define GL_TEXTURE_MIN_FILTER 0x00002801
#define GL_TEXTURE_WRAP_S 0x00002802
#define GL_TEXTURE_WRAP_T 0x00002803
#define GL_REPEAT 0x00002901
#define GL_COLOR_LOGIC_OP 0x00000BF2
#define GL_POLYGON_OFFSET_UNITS 0x00002A00
#define GL_POLYGON_OFFSET_POINT 0x00002A01
#define GL_POLYGON_OFFSET_LINE 0x00002A02
#define GL_POLYGON_OFFSET_FILL 0x00008037
#define GL_POLYGON_OFFSET_FACTOR 0x00008038
#define GL_TEXTURE_BINDING_1D 0x00008068
#define GL_TEXTURE_BINDING_2D 0x00008069
#define GL_TEXTURE_INTERNAL_FORMAT 0x00001003
#define GL_TEXTURE_RED_SIZE 0x0000805C
#define GL_TEXTURE_GREEN_SIZE 0x0000805D
#define GL_TEXTURE_BLUE_SIZE 0x0000805E
#define GL_TEXTURE_ALPHA_SIZE 0x0000805F
#define GL_DOUBLE 0x0000140A
#define GL_PROXY_TEXTURE_1D 0x00008063
#define GL_PROXY_TEXTURE_2D 0x00008064
#define GL_R3_G3_B2 0x00002A10
#define GL_RGB4 0x0000804F
#define GL_RGB5 0x00008050
#define GL_RGB8 0x00008051
#define GL_RGB10 0x00008052
#define GL_RGB12 0x00008053
#define GL_RGB16 0x00008054
#define GL_RGBA2 0x00008055
#define GL_RGBA4 0x00008056
#define GL_RGB5_A1 0x00008057
#define GL_RGBA8 0x00008058
#define GL_RGB10_A2 0x00008059
#define GL_RGBA12 0x0000805A
#define GL_RGBA16 0x0000805B
#define GL_UNSIGNED_BYTE_3_3_2 0x00008032
#define GL_UNSIGNED_SHORT_4_4_4_4 0x00008033
#define GL_UNSIGNED_SHORT_5_5_5_1 0x00008034
#define GL_UNSIGNED_INT_8_8_8_8 0x00008035
#define GL_UNSIGNED_INT_10_10_10_2 0x00008036
#define GL_TEXTURE_BINDING_3D 0x0000806A
#define GL_PACK_SKIP_IMAGES 0x0000806B
#define GL_PACK_IMAGE_HEIGHT 0x0000806C
#define GL_UNPACK_SKIP_IMAGES 0x0000806D
#define GL_UNPACK_IMAGE_HEIGHT 0x0000806E
#define GL_TEXTURE_3D 0x0000806F
#define GL_PROXY_TEXTURE_3D 0x00008070
#define GL_TEXTURE_DEPTH 0x00008071
#define GL_TEXTURE_WRAP_R 0x00008072
#define GL_MAX_3D_TEXTURE_SIZE 0x00008073
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x00008362
#define GL_UNSIGNED_SHORT_5_6_5 0x00008363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x00008364
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x00008365
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x00008366
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x00008367
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x00008368
#define GL_BGR 0x000080E0
#define GL_BGRA 0x000080E1
#define GL_MAX_ELEMENTS_VERTICES 0x000080E8
#define GL_MAX_ELEMENTS_INDICES 0x000080E9
#define GL_CLAMP_TO_EDGE 0x0000812F
#define GL_TEXTURE_MIN_LOD 0x0000813A
#define GL_TEXTURE_MAX_LOD 0x0000813B
#define GL_TEXTURE_BASE_LEVEL 0x0000813C
#define GL_TEXTURE_MAX_LEVEL 0x0000813D
#define GL_SMOOTH_POINT_SIZE_RANGE 0x00000B12
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x00000B13
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x00000B22
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x00000B23
#define GL_ALIASED_LINE_WIDTH_RANGE 0x0000846E
#define GL_TEXTURE0 0x000084C0
#define GL_TEXTURE1 0x000084C1
#define GL_TEXTURE2 0x000084C2
#define GL_TEXTURE3 0x000084C3
#define GL_TEXTURE4 0x000084C4
#define GL_TEXTURE5 0x000084C5
#define GL_TEXTURE6 0x000084C6
#define GL_TEXTURE7 0x000084C7
#define GL_TEXTURE8 0x000084C8
#define GL_TEXTURE9 0x000084C9
#define GL_TEXTURE10 0x000084CA
#define GL_TEXTURE11 0x000084CB
#define GL_TEXTURE12 0x000084CC
#define GL_TEXTURE13 0x000084CD
#define GL_TEXTURE14 0x000084CE
#define GL_TEXTURE15 0x000084CF
#define GL_TEXTURE16 0x000084D0
#define GL_TEXTURE17 0x000084D1
#define GL_TEXTURE18 0x000084D2
#define GL_TEXTURE19 0x000084D3
#define GL_TEXTURE20 0x000084D4
#define GL_TEXTURE21 0x000084D5
#define GL_TEXTURE22 0x000084D6
#define GL_TEXTURE23 0x000084D7
#define GL_TEXTURE24 0x000084D8
#define GL_TEXTURE25 0x000084D9
#define GL_TEXTURE26 0x000084DA
#define GL_TEXTURE27 0x000084DB
#define GL_TEXTURE28 0x000084DC
#define GL_TEXTURE29 0x000084DD
#define GL_TEXTURE30 0x000084DE
#define GL_TEXTURE31 0x000084DF
#define GL_ACTIVE_TEXTURE 0x000084E0
#define GL_MULTISAMPLE 0x0000809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x0000809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x0000809F
#define GL_SAMPLE_COVERAGE 0x000080A0
#define GL_SAMPLE_BUFFERS 0x000080A8
#define GL_SAMPLES 0x000080A9
#define GL_SAMPLE_COVERAGE_VALUE 0x000080AA
#define GL_SAMPLE_COVERAGE_INVERT 0x000080AB
#define GL_TEXTURE_CUBE_MAP 0x00008513
#define GL_TEXTURE_BINDING_CUBE_MAP 0x00008514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x00008515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x00008516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x00008517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x00008518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x00008519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x0000851A
#define GL_PROXY_TEXTURE_CUBE_MAP 0x0000851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x0000851C
#define GL_COMPRESSED_RGB 0x000084ED
#define GL_COMPRESSED_RGBA 0x000084EE
#define GL_TEXTURE_COMPRESSION_HINT 0x000084EF
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x000086A0
#define GL_TEXTURE_COMPRESSED 0x000086A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x000086A2
#define GL_COMPRESSED_TEXTURE_FORMATS 0x000086A3
#define GL_CLAMP_TO_BORDER 0x0000812D
#define GL_BLEND_DST_RGB 0x000080C8
#define GL_BLEND_SRC_RGB 0x000080C9
#define GL_BLEND_DST_ALPHA 0x000080CA
#define GL_BLEND_SRC_ALPHA 0x000080CB
#define GL_POINT_FADE_THRESHOLD_SIZE 0x00008128
#define GL_DEPTH_COMPONENT16 0x000081A5
#define GL_DEPTH_COMPONENT24 0x000081A6
#define GL_DEPTH_COMPONENT32 0x000081A7
#define GL_MIRRORED_REPEAT 0x00008370
#define GL_MAX_TEXTURE_LOD_BIAS 0x000084FD
#define GL_TEXTURE_LOD_BIAS 0x00008501
#define GL_INCR_WRAP 0x00008507
#define GL_DECR_WRAP 0x00008508
#define GL_TEXTURE_DEPTH_SIZE 0x0000884A
#define GL_TEXTURE_COMPARE_MODE 0x0000884C
#define GL_TEXTURE_COMPARE_FUNC 0x0000884D
#define GL_BLEND_COLOR 0x00008005
#define GL_BLEND_EQUATION 0x00008009
#define GL_CONSTANT_COLOR 0x00008001
#define GL_ONE_MINUS_CONSTANT_COLOR 0x00008002
#define GL_CONSTANT_ALPHA 0x00008003
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x00008004
#define GL_FUNC_ADD 0x00008006
#define GL_FUNC_REVERSE_SUBTRACT 0x0000800B
#define GL_FUNC_SUBTRACT 0x0000800A
#define GL_MIN 0x00008007
#define GL_MAX 0x00008008
#define GL_BUFFER_SIZE 0x00008764
#define GL_BUFFER_USAGE 0x00008765
#define GL_QUERY_COUNTER_BITS 0x00008864
#define GL_CURRENT_QUERY 0x00008865
#define GL_QUERY_RESULT 0x00008866
#define GL_QUERY_RESULT_AVAILABLE 0x00008867
#define GL_ARRAY_BUFFER 0x00008892
#define GL_ELEMENT_ARRAY_BUFFER 0x00008893
#define GL_ARRAY_BUFFER_BINDING 0x00008894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x00008895
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x0000889F
#define GL_READ_ONLY 0x000088B8
#define GL_WRITE_ONLY 0x000088B9
#define GL_READ_WRITE 0x000088BA
#define GL_BUFFER_ACCESS 0x000088BB
#define GL_BUFFER_MAPPED 0x000088BC
#define GL_BUFFER_MAP_POINTER 0x000088BD
#define GL_STREAM_DRAW 0x000088E0
#define GL_STREAM_READ 0x000088E1
#define GL_STREAM_COPY 0x000088E2
#define GL_STATIC_DRAW 0x000088E4
#define GL_STATIC_READ 0x000088E5
#define GL_STATIC_COPY 0x000088E6
#define GL_DYNAMIC_DRAW 0x000088E8
#define GL_DYNAMIC_READ 0x000088E9
#define GL_DYNAMIC_COPY 0x000088EA
#define GL_SAMPLES_PASSED 0x00008914
#define GL_SRC1_ALPHA 0x00008589
#define GL_BLEND_EQUATION_RGB 0x00008009
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x00008622
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x00008623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x00008624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x00008625
#define GL_CURRENT_VERTEX_ATTRIB 0x00008626
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x00008642
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x00008645
#define GL_STENCIL_BACK_FUNC 0x00008800
#define GL_STENCIL_BACK_FAIL 0x00008801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x00008802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x00008803
#define GL_MAX_DRAW_BUFFERS 0x00008824
#define GL_DRAW_BUFFER0 0x00008825
#define GL_DRAW_BUFFER1 0x00008826
#define GL_DRAW_BUFFER2 0x00008827
#define GL_DRAW_BUFFER3 0x00008828
#define GL_DRAW_BUFFER4 0x00008829
#define GL_DRAW_BUFFER5 0x0000882A
#define GL_DRAW_BUFFER6 0x0000882B
#define GL_DRAW_BUFFER7 0x0000882C
#define GL_DRAW_BUFFER8 0x0000882D
#define GL_DRAW_BUFFER9 0x0000882E
#define GL_DRAW_BUFFER10 0x0000882F
#define GL_DRAW_BUFFER11 0x00008830
#define GL_DRAW_BUFFER12 0x00008831
#define GL_DRAW_BUFFER13 0x00008832
#define GL_DRAW_BUFFER14 0x00008833
#define GL_DRAW_BUFFER15 0x00008834
#define GL_BLEND_EQUATION_ALPHA 0x0000883D
#define GL_MAX_VERTEX_ATTRIBS 0x00008869
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x0000886A
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x00008872
#define GL_FRAGMENT_SHADER 0x00008B30
#define GL_VERTEX_SHADER 0x00008B31
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x00008B49
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x00008B4A
#define GL_MAX_VARYING_FLOATS 0x00008B4B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x00008B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x00008B4D
#define GL_SHADER_TYPE 0x00008B4F
#define GL_FLOAT_VEC2 0x00008B50
#define GL_FLOAT_VEC3 0x00008B51
#define GL_FLOAT_VEC4 0x00008B52
#define GL_INT_VEC2 0x00008B53
#define GL_INT_VEC3 0x00008B54
#define GL_INT_VEC4 0x00008B55
#define GL_BOOL 0x00008B56
#define GL_BOOL_VEC2 0x00008B57
#define GL_BOOL_VEC3 0x00008B58
#define GL_BOOL_VEC4 0x00008B59
#define GL_FLOAT_MAT2 0x00008B5A
#define GL_FLOAT_MAT3 0x00008B5B
#define GL_FLOAT_MAT4 0x00008B5C
#define GL_SAMPLER_1D 0x00008B5D
#define GL_SAMPLER_2D 0x00008B5E
#define GL_SAMPLER_3D 0x00008B5F
#define GL_SAMPLER_CUBE 0x00008B60
#define GL_SAMPLER_1D_SHADOW 0x00008B61
#define GL_SAMPLER_2D_SHADOW 0x00008B62
#define GL_DELETE_STATUS 0x00008B80
#define GL_COMPILE_STATUS 0x00008B81
#define GL_LINK_STATUS 0x00008B82
#define GL_VALIDATE_STATUS 0x00008B83
#define GL_INFO_LOG_LENGTH 0x00008B84
#define GL_ATTACHED_SHADERS 0x00008B85
#define GL_ACTIVE_UNIFORMS 0x00008B86
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x00008B87
#define GL_SHADER_SOURCE_LENGTH 0x00008B88
#define GL_ACTIVE_ATTRIBUTES 0x00008B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x00008B8A
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x00008B8B
#define GL_SHADING_LANGUAGE_VERSION 0x00008B8C
#define GL_CURRENT_PROGRAM 0x00008B8D
#define GL_POINT_SPRITE_COORD_ORIGIN 0x00008CA0
#define GL_LOWER_LEFT 0x00008CA1
#define GL_UPPER_LEFT 0x00008CA2
#define GL_STENCIL_BACK_REF 0x00008CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x00008CA4
#define GL_STENCIL_BACK_WRITEMASK 0x00008CA5
#define GL_PIXEL_PACK_BUFFER 0x000088EB
#define GL_PIXEL_UNPACK_BUFFER 0x000088EC
#define GL_PIXEL_PACK_BUFFER_BINDING 0x000088ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x000088EF
#define GL_FLOAT_MAT2x3 0x00008B65
#define GL_FLOAT_MAT2x4 0x00008B66
#define GL_FLOAT_MAT3x2 0x00008B67
#define GL_FLOAT_MAT3x4 0x00008B68
#define GL_FLOAT_MAT4x2 0x00008B69
#define GL_FLOAT_MAT4x3 0x00008B6A
#define GL_SRGB 0x00008C40
#define GL_SRGB8 0x00008C41
#define GL_SRGB_ALPHA 0x00008C42
#define GL_SRGB8_ALPHA8 0x00008C43
#define GL_COMPRESSED_SRGB 0x00008C48
#define GL_COMPRESSED_SRGB_ALPHA 0x00008C49
#define GL_COMPARE_REF_TO_TEXTURE 0x0000884E
#define GL_CLIP_DISTANCE0 0x00003000
#define GL_CLIP_DISTANCE1 0x00003001
#define GL_CLIP_DISTANCE2 0x00003002
#define GL_CLIP_DISTANCE3 0x00003003
#define GL_CLIP_DISTANCE4 0x00003004
#define GL_CLIP_DISTANCE5 0x00003005
#define GL_CLIP_DISTANCE6 0x00003006
#define GL_CLIP_DISTANCE7 0x00003007
#define GL_MAX_CLIP_DISTANCES 0x00000D32
#define GL_MAJOR_VERSION 0x0000821B
#define GL_MINOR_VERSION 0x0000821C
#define GL_NUM_EXTENSIONS 0x0000821D
#define GL_CONTEXT_FLAGS 0x0000821E
#define GL_COMPRESSED_RED 0x00008225
#define GL_COMPRESSED_RG 0x00008226
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_RGBA32F 0x00008814
#define GL_RGB32F 0x00008815
#define GL_RGBA16F 0x0000881A
#define GL_RGB16F 0x0000881B
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x000088FD
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x000088FF
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x00008904
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x00008905
#define GL_CLAMP_READ_COLOR 0x0000891C
#define GL_FIXED_ONLY 0x0000891D
#define GL_MAX_VARYING_COMPONENTS 0x00008B4B
#define GL_TEXTURE_1D_ARRAY 0x00008C18
#define GL_PROXY_TEXTURE_1D_ARRAY 0x00008C19
#define GL_TEXTURE_2D_ARRAY 0x00008C1A
#define GL_PROXY_TEXTURE_2D_ARRAY 0x00008C1B
#define GL_TEXTURE_BINDING_1D_ARRAY 0x00008C1C
#define GL_TEXTURE_BINDING_2D_ARRAY 0x00008C1D
#define GL_R11F_G11F_B10F 0x00008C3A
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x00008C3B
#define GL_RGB9_E5 0x00008C3D
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x00008C3E
#define GL_TEXTURE_SHARED_SIZE 0x00008C3F
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x00008C76
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x00008C7F
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x00008C80
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x00008C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x00008C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x00008C85
#define GL_PRIMITIVES_GENERATED 0x00008C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x00008C88
#define GL_RASTERIZER_DISCARD 0x00008C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x00008C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x00008C8B
#define GL_INTERLEAVED_ATTRIBS 0x00008C8C
#define GL_SEPARATE_ATTRIBS 0x00008C8D
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x00008C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x00008C8F
#define GL_RGBA32UI 0x00008D70
#define GL_RGB32UI 0x00008D71
#define GL_RGBA16UI 0x00008D76
#define GL_RGB16UI 0x00008D77
#define GL_RGBA8UI 0x00008D7C
#define GL_RGB8UI 0x00008D7D
#define GL_RGBA32I 0x00008D82
#define GL_RGB32I 0x00008D83
#define GL_RGBA16I 0x00008D88
#define GL_RGB16I 0x00008D89
#define GL_RGBA8I 0x00008D8E
#define GL_RGB8I 0x00008D8F
#define GL_RED_INTEGER 0x00008D94
#define GL_GREEN_INTEGER 0x00008D95
#define GL_BLUE_INTEGER 0x00008D96
#define GL_RGB_INTEGER 0x00008D98
#define GL_RGBA_INTEGER 0x00008D99
#define GL_BGR_INTEGER 0x00008D9A
#define GL_BGRA_INTEGER 0x00008D9B
#define GL_SAMPLER_1D_ARRAY 0x00008DC0
#define GL_SAMPLER_2D_ARRAY 0x00008DC1
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x00008DC3
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x00008DC4
#define GL_SAMPLER_CUBE_SHADOW 0x00008DC5
#define GL_UNSIGNED_INT_VEC2 0x00008DC6
#define GL_UNSIGNED_INT_VEC3 0x00008DC7
#define GL_UNSIGNED_INT_VEC4 0x00008DC8
#define GL_INT_SAMPLER_1D 0x00008DC9
#define GL_INT_SAMPLER_2D 0x00008DCA
#define GL_INT_SAMPLER_3D 0x00008DCB
#define GL_INT_SAMPLER_CUBE 0x00008DCC
#define GL_INT_SAMPLER_1D_ARRAY 0x00008DCE
#define GL_INT_SAMPLER_2D_ARRAY 0x00008DCF
#define GL_UNSIGNED_INT_SAMPLER_1D 0x00008DD1
#define GL_UNSIGNED_INT_SAMPLER_2D 0x00008DD2
#define GL_UNSIGNED_INT_SAMPLER_3D 0x00008DD3
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x00008DD4
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x00008DD6
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x00008DD7
#define GL_QUERY_WAIT 0x00008E13
#define GL_QUERY_NO_WAIT 0x00008E14
#define GL_QUERY_BY_REGION_WAIT 0x00008E15
#define GL_QUERY_BY_REGION_NO_WAIT 0x00008E16
#define GL_BUFFER_ACCESS_FLAGS 0x0000911F
#define GL_BUFFER_MAP_LENGTH 0x00009120
#define GL_BUFFER_MAP_OFFSET 0x00009121
#define GL_DEPTH_COMPONENT32F 0x00008CAC
#define GL_DEPTH32F_STENCIL8 0x00008CAD
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x00008DAD
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x00000506
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x00008210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x00008211
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x00008212
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x00008213
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x00008214
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x00008215
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x00008216
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x00008217
#define GL_FRAMEBUFFER_DEFAULT 0x00008218
#define GL_FRAMEBUFFER_UNDEFINED 0x00008219
#define GL_DEPTH_STENCIL_ATTACHMENT 0x0000821A
#define GL_MAX_RENDERBUFFER_SIZE 0x000084E8
#define GL_DEPTH_STENCIL 0x000084F9
#define GL_UNSIGNED_INT_24_8 0x000084FA
#define GL_DEPTH24_STENCIL8 0x000088F0
#define GL_TEXTURE_STENCIL_SIZE 0x000088F1
#define GL_TEXTURE_RED_TYPE 0x00008C10
#define GL_TEXTURE_GREEN_TYPE 0x00008C11
#define GL_TEXTURE_BLUE_TYPE 0x00008C12
#define GL_TEXTURE_ALPHA_TYPE 0x00008C13
#define GL_TEXTURE_DEPTH_TYPE 0x00008C16
#define GL_UNSIGNED_NORMALIZED 0x00008C17
#define GL_FRAMEBUFFER_BINDING 0x00008CA6
#define GL_DRAW_FRAMEBUFFER_BINDING 0x00008CA6
#define GL_RENDERBUFFER_BINDING 0x00008CA7
#define GL_READ_FRAMEBUFFER 0x00008CA8
#define GL_DRAW_FRAMEBUFFER 0x00008CA9
#define GL_READ_FRAMEBUFFER_BINDING 0x00008CAA
#define GL_RENDERBUFFER_SAMPLES 0x00008CAB
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x00008CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x00008CD1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x00008CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x00008CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x00008CD4
#define GL_FRAMEBUFFER_COMPLETE 0x00008CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x00008CD6
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x00008CD7
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x00008CDB
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x00008CDC
#define GL_FRAMEBUFFER_UNSUPPORTED 0x00008CDD
#define GL_MAX_COLOR_ATTACHMENTS 0x00008CDF
#define GL_COLOR_ATTACHMENT0 0x00008CE0
#define GL_COLOR_ATTACHMENT1 0x00008CE1
#define GL_COLOR_ATTACHMENT2 0x00008CE2
#define GL_COLOR_ATTACHMENT3 0x00008CE3
#define GL_COLOR_ATTACHMENT4 0x00008CE4
#define GL_COLOR_ATTACHMENT5 0x00008CE5
#define GL_COLOR_ATTACHMENT6 0x00008CE6
#define GL_COLOR_ATTACHMENT7 0x00008CE7
#define GL_COLOR_ATTACHMENT8 0x00008CE8
#define GL_COLOR_ATTACHMENT9 0x00008CE9
#define GL_COLOR_ATTACHMENT10 0x00008CEA
#define GL_COLOR_ATTACHMENT11 0x00008CEB
#define GL_COLOR_ATTACHMENT12 0x00008CEC
#define GL_COLOR_ATTACHMENT13 0x00008CED
#define GL_COLOR_ATTACHMENT14 0x00008CEE
#define GL_COLOR_ATTACHMENT15 0x00008CEF
#define GL_COLOR_ATTACHMENT16 0x00008CF0
#define GL_COLOR_ATTACHMENT17 0x00008CF1
#define GL_COLOR_ATTACHMENT18 0x00008CF2
#define GL_COLOR_ATTACHMENT19 0x00008CF3
#define GL_COLOR_ATTACHMENT20 0x00008CF4
#define GL_COLOR_ATTACHMENT21 0x00008CF5
#define GL_COLOR_ATTACHMENT22 0x00008CF6
#define GL_COLOR_ATTACHMENT23 0x00008CF7
#define GL_COLOR_ATTACHMENT24 0x00008CF8
#define GL_COLOR_ATTACHMENT25 0x00008CF9
#define GL_COLOR_ATTACHMENT26 0x00008CFA
#define GL_COLOR_ATTACHMENT27 0x00008CFB
#define GL_COLOR_ATTACHMENT28 0x00008CFC
#define GL_COLOR_ATTACHMENT29 0x00008CFD
#define GL_COLOR_ATTACHMENT30 0x00008CFE
#define GL_COLOR_ATTACHMENT31 0x00008CFF
#define GL_DEPTH_ATTACHMENT 0x00008D00
#define GL_STENCIL_ATTACHMENT 0x00008D20
#define GL_FRAMEBUFFER 0x00008D40
#define GL_RENDERBUFFER 0x00008D41
#define GL_RENDERBUFFER_WIDTH 0x00008D42
#define GL_RENDERBUFFER_HEIGHT 0x00008D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x00008D44
#define GL_STENCIL_INDEX1 0x00008D46
#define GL_STENCIL_INDEX4 0x00008D47
#define GL_STENCIL_INDEX8 0x00008D48
#define GL_STENCIL_INDEX16 0x00008D49
#define GL_RENDERBUFFER_RED_SIZE 0x00008D50
#define GL_RENDERBUFFER_GREEN_SIZE 0x00008D51
#define GL_RENDERBUFFER_BLUE_SIZE 0x00008D52
#define GL_RENDERBUFFER_ALPHA_SIZE 0x00008D53
#define GL_RENDERBUFFER_DEPTH_SIZE 0x00008D54
#define GL_RENDERBUFFER_STENCIL_SIZE 0x00008D55
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x00008D56
#define GL_MAX_SAMPLES 0x00008D57
#define GL_FRAMEBUFFER_SRGB 0x00008DB9
#define GL_HALF_FLOAT 0x0000140B
#define GL_MAP_READ_BIT 0x00000001
#define GL_MAP_WRITE_BIT 0x00000002
#define GL_MAP_INVALIDATE_RANGE_BIT 0x00000004
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x00000008
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x00000010
#define GL_MAP_UNSYNCHRONIZED_BIT 0x00000020
#define GL_COMPRESSED_RED_RGTC1 0x00008DBB
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x00008DBC
#define GL_COMPRESSED_RG_RGTC2 0x00008DBD
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x00008DBE
#define GL_RG 0x00008227
#define GL_RG_INTEGER 0x00008228
#define GL_R8 0x00008229
#define GL_R16 0x0000822A
#define GL_RG8 0x0000822B
#define GL_RG16 0x0000822C
#define GL_R16F 0x0000822D
#define GL_R32F 0x0000822E
#define GL_RG16F 0x0000822F
#define GL_RG32F 0x00008230
#define GL_R8I 0x00008231
#define GL_R8UI 0x00008232
#define GL_R16I 0x00008233
#define GL_R16UI 0x00008234
#define GL_R32I 0x00008235
#define GL_R32UI 0x00008236
#define GL_RG8I 0x00008237
#define GL_RG8UI 0x00008238
#define GL_RG16I 0x00008239
#define GL_RG16UI 0x0000823A
#define GL_RG32I 0x0000823B
#define GL_RG32UI 0x0000823C
#define GL_VERTEX_ARRAY_BINDING 0x000085B5
#define GL_SAMPLER_2D_RECT 0x00008B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x00008B64
#define GL_SAMPLER_BUFFER 0x00008DC2
#define GL_INT_SAMPLER_2D_RECT 0x00008DCD
#define GL_INT_SAMPLER_BUFFER 0x00008DD0
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x00008DD5
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x00008DD8
#define GL_TEXTURE_BUFFER 0x00008C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x00008C2B
#define GL_TEXTURE_BINDING_BUFFER 0x00008C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x00008C2D
#define GL_TEXTURE_RECTANGLE 0x000084F5
#define GL_TEXTURE_BINDING_RECTANGLE 0x000084F6
#define GL_PROXY_TEXTURE_RECTANGLE 0x000084F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x000084F8
#define GL_R8_SNORM 0x00008F94
#define GL_RG8_SNORM 0x00008F95
#define GL_RGB8_SNORM 0x00008F96
#define GL_RGBA8_SNORM 0x00008F97
#define GL_R16_SNORM 0x00008F98
#define GL_RG16_SNORM 0x00008F99
#define GL_RGB16_SNORM 0x00008F9A
#define GL_RGBA16_SNORM 0x00008F9B
#define GL_SIGNED_NORMALIZED 0x00008F9C
#define GL_PRIMITIVE_RESTART 0x00008F9D
#define GL_PRIMITIVE_RESTART_INDEX 0x00008F9E
#define GL_COPY_READ_BUFFER 0x00008F36
#define GL_COPY_WRITE_BUFFER 0x00008F37
#define GL_UNIFORM_BUFFER 0x00008A11
#define GL_UNIFORM_BUFFER_BINDING 0x00008A28
#define GL_UNIFORM_BUFFER_START 0x00008A29
#define GL_UNIFORM_BUFFER_SIZE 0x00008A2A
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x00008A2B
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x00008A2C
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x00008A2D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x00008A2E
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x00008A2F
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x00008A30
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x00008A31
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x00008A32
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x00008A33
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x00008A34
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x00008A35
#define GL_ACTIVE_UNIFORM_BLOCKS 0x00008A36
#define GL_UNIFORM_TYPE 0x00008A37
#define GL_UNIFORM_SIZE 0x00008A38
#define GL_UNIFORM_NAME_LENGTH 0x00008A39
#define GL_UNIFORM_BLOCK_INDEX 0x00008A3A
#define GL_UNIFORM_OFFSET 0x00008A3B
#define GL_UNIFORM_ARRAY_STRIDE 0x00008A3C
#define GL_UNIFORM_MATRIX_STRIDE 0x00008A3D
#define GL_UNIFORM_IS_ROW_MAJOR 0x00008A3E
#define GL_UNIFORM_BLOCK_BINDING 0x00008A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x00008A40
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x00008A41
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x00008A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x00008A43
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x00008A44
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x00008A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x00008A46
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_LINES_ADJACENCY 0x0000000A
#define GL_LINE_STRIP_ADJACENCY 0x0000000B
#define GL_TRIANGLES_ADJACENCY 0x0000000C
#define GL_TRIANGLE_STRIP_ADJACENCY 0x0000000D
#define GL_PROGRAM_POINT_SIZE 0x00008642
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x00008C29
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x00008DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x00008DA8
#define GL_GEOMETRY_SHADER 0x00008DD9
#define GL_GEOMETRY_VERTICES_OUT 0x00008916
#define GL_GEOMETRY_INPUT_TYPE 0x00008917
#define GL_GEOMETRY_OUTPUT_TYPE 0x00008918
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x00008DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x00008DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x00008DE1
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x00009122
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x00009123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x00009124
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x00009125
#define GL_CONTEXT_PROFILE_MASK 0x00009126
#define GL_DEPTH_CLAMP 0x0000864F
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x00008E4C
#define GL_FIRST_VERTEX_CONVENTION 0x00008E4D
#define GL_LAST_VERTEX_CONVENTION 0x00008E4E
#define GL_PROVOKING_VERTEX 0x00008E4F
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x0000884F
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x00009111
#define GL_OBJECT_TYPE 0x00009112
#define GL_SYNC_CONDITION 0x00009113
#define GL_SYNC_STATUS 0x00009114
#define GL_SYNC_FLAGS 0x00009115
#define GL_SYNC_FENCE 0x00009116
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x00009117
#define GL_UNSIGNALED 0x00009118
#define GL_SIGNALED 0x00009119
#define GL_ALREADY_SIGNALED 0x0000911A
#define GL_TIMEOUT_EXPIRED 0x0000911B
#define GL_CONDITION_SATISFIED 0x0000911C
#define GL_WAIT_FAILED 0x0000911D
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SAMPLE_POSITION 0x00008E50
#define GL_SAMPLE_MASK 0x00008E51
#define GL_SAMPLE_MASK_VALUE 0x00008E52
#define GL_MAX_SAMPLE_MASK_WORDS 0x00008E59
#define GL_TEXTURE_2D_MULTISAMPLE 0x00009100
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x00009101
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x00009102
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x00009103
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x00009104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x00009105
#define GL_TEXTURE_SAMPLES 0x00009106
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x00009107
#define GL_SAMPLER_2D_MULTISAMPLE 0x00009108
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x00009109
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x0000910A
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x0000910B
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x0000910C
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x0000910D
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x0000910E
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x0000910F
#define GL_MAX_INTEGER_SAMPLES 0x00009110
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x000088FE
#define GL_SRC1_COLOR 0x000088F9
#define GL_ONE_MINUS_SRC1_COLOR 0x000088FA
#define GL_ONE_MINUS_SRC1_ALPHA 0x000088FB
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x000088FC
#define GL_ANY_SAMPLES_PASSED 0x00008C2F
#define GL_SAMPLER_BINDING 0x00008919
#define GL_RGB10_A2UI 0x0000906F
#define GL_TEXTURE_SWIZZLE_R 0x00008E42
#define GL_TEXTURE_SWIZZLE_G 0x00008E43
#define GL_TEXTURE_SWIZZLE_B 0x00008E44
#define GL_TEXTURE_SWIZZLE_A 0x00008E45
#define GL_TEXTURE_SWIZZLE_RGBA 0x00008E46
#define GL_TIME_ELAPSED 0x000088BF
#define GL_TIMESTAMP 0x00008E28
#define GL_INT_2_10_10_10_REV 0x00008D9F
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x00008242
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x00008243
#define GL_DEBUG_CALLBACK_FUNCTION 0x00008244
#define GL_DEBUG_CALLBACK_USER_PARAM 0x00008245
#define GL_DEBUG_SOURCE_API 0x00008246
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x00008247
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x00008248
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x00008249
#define GL_DEBUG_SOURCE_APPLICATION 0x0000824A
#define GL_DEBUG_SOURCE_OTHER 0x0000824B
#define GL_DEBUG_TYPE_ERROR 0x0000824C
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x0000824D
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x0000824E
#define GL_DEBUG_TYPE_PORTABILITY 0x0000824F
#define GL_DEBUG_TYPE_PERFORMANCE 0x00008250
#define GL_DEBUG_TYPE_OTHER 0x00008251
#define GL_DEBUG_TYPE_MARKER 0x00008268
#define GL_DEBUG_TYPE_PUSH_GROUP 0x00008269
#define GL_DEBUG_TYPE_POP_GROUP 0x0000826A
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x0000826B
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x0000826C
#define GL_DEBUG_GROUP_STACK_DEPTH 0x0000826D
#define GL_BUFFER 0x000082E0
#define GL_SHADER 0x000082E1
#define GL_PROGRAM 0x000082E2
#define GL_VERTEX_ARRAY 0x00008074
#define GL_QUERY 0x000082E3
#define GL_PROGRAM_PIPELINE 0x000082E4
#define GL_SAMPLER 0x000082E6
#define GL_MAX_LABEL_LENGTH 0x000082E8
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x00009143
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x00009144
#define GL_DEBUG_LOGGED_MESSAGES 0x00009145
#define GL_DEBUG_SEVERITY_HIGH 0x00009146
#define GL_DEBUG_SEVERITY_MEDIUM 0x00009147
#define GL_DEBUG_SEVERITY_LOW 0x00009148
#define GL_DEBUG_OUTPUT 0x000092E0
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#define GL_STACK_OVERFLOW 0x00000503
#define GL_STACK_UNDERFLOW 0x00000504
#define GL_DISPLAY_LIST 0x000082E7

typedef void (*GLPROC_glCullFace)(GLenum mode);
typedef void (*GLPROC_glFrontFace)(GLenum mode);
typedef void (*GLPROC_glHint)(GLenum target, GLenum mode);
typedef void (*GLPROC_glLineWidth)(GLfloat width);
typedef void (*GLPROC_glPointSize)(GLfloat size);
typedef void (*GLPROC_glPolygonMode)(GLenum face, GLenum mode);
typedef void (*GLPROC_glScissor)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (*GLPROC_glTexParameterf)(GLenum target, GLenum pname, GLfloat param);
typedef void (*GLPROC_glTexParameterfv)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (*GLPROC_glTexParameteri)(GLenum target, GLenum pname, GLint param);
typedef void (*GLPROC_glTexParameteriv)(GLenum target, GLenum pname, const GLint * params);
typedef void (*GLPROC_glTexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (*GLPROC_glTexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (*GLPROC_glDrawBuffer)(GLenum buf);
typedef void (*GLPROC_glClear)(GLbitfield mask);
typedef void (*GLPROC_glClearColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (*GLPROC_glClearStencil)(GLint s);
typedef void (*GLPROC_glClearDepth)(GLdouble depth);
typedef void (*GLPROC_glStencilMask)(GLuint mask);
typedef void (*GLPROC_glColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (*GLPROC_glDepthMask)(GLboolean flag);
typedef void (*GLPROC_glDisable)(GLenum cap);
typedef void (*GLPROC_glEnable)(GLenum cap);
typedef void (*GLPROC_glFinish)();
typedef void (*GLPROC_glFlush)();
typedef void (*GLPROC_glBlendFunc)(GLenum sfactor, GLenum dfactor);
typedef void (*GLPROC_glLogicOp)(GLenum opcode);
typedef void (*GLPROC_glStencilFunc)(GLenum func, GLint ref, GLuint mask);
typedef void (*GLPROC_glStencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
typedef void (*GLPROC_glDepthFunc)(GLenum func);
typedef void (*GLPROC_glPixelStoref)(GLenum pname, GLfloat param);
typedef void (*GLPROC_glPixelStorei)(GLenum pname, GLint param);
typedef void (*GLPROC_glReadBuffer)(GLenum src);
typedef void (*GLPROC_glReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
typedef void (*GLPROC_glGetBooleanv)(GLenum pname, GLboolean * data);
typedef void (*GLPROC_glGetDoublev)(GLenum pname, GLdouble * data);
typedef GLenum (*GLPROC_glGetError)();
typedef void (*GLPROC_glGetFloatv)(GLenum pname, GLfloat * data);
typedef void (*GLPROC_glGetIntegerv)(GLenum pname, GLint * data);
typedef const GLubyte * (*GLPROC_glGetString)(GLenum name);
typedef void (*GLPROC_glGetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (*GLPROC_glGetTexParameterfv)(GLenum target, GLenum pname, GLfloat * params);
typedef void (*GLPROC_glGetTexParameteriv)(GLenum target, GLenum pname, GLint * params);
typedef void (*GLPROC_glGetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (*GLPROC_glGetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint * params);
typedef GLboolean (*GLPROC_glIsEnabled)(GLenum cap);
typedef void (*GLPROC_glDepthRange)(GLdouble n, GLdouble f);
typedef void (*GLPROC_glViewport)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (*GLPROC_glDrawArrays)(GLenum mode, GLint first, GLsizei count);
typedef void (*GLPROC_glDrawElements)(GLenum mode, GLsizei count, GLenum type, const void * indices);
typedef void (*GLPROC_glPolygonOffset)(GLfloat factor, GLfloat units);
typedef void (*GLPROC_glCopyTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (*GLPROC_glCopyTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (*GLPROC_glCopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (*GLPROC_glCopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (*GLPROC_glTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (*GLPROC_glTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (*GLPROC_glBindTexture)(GLenum target, GLuint texture);
typedef void (*GLPROC_glDeleteTextures)(GLsizei n, const GLuint * textures);
typedef void (*GLPROC_glGenTextures)(GLsizei n, GLuint * textures);
typedef GLboolean (*GLPROC_glIsTexture)(GLuint texture);
typedef void (*GLPROC_glDrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
typedef void (*GLPROC_glTexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (*GLPROC_glTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (*GLPROC_glCopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (*GLPROC_glActiveTexture)(GLenum texture);
typedef void (*GLPROC_glSampleCoverage)(GLfloat value, GLboolean invert);
typedef void (*GLPROC_glCompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
typedef void (*GLPROC_glCompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
typedef void (*GLPROC_glCompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
typedef void (*GLPROC_glCompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (*GLPROC_glCompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (*GLPROC_glCompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (*GLPROC_glGetCompressedTexImage)(GLenum target, GLint level, void * img);
typedef void (*GLPROC_glBlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (*GLPROC_glMultiDrawArrays)(GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
typedef void (*GLPROC_glMultiDrawElements)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
typedef void (*GLPROC_glPointParameterf)(GLenum pname, GLfloat param);
typedef void (*GLPROC_glPointParameterfv)(GLenum pname, const GLfloat * params);
typedef void (*GLPROC_glPointParameteri)(GLenum pname, GLint param);
typedef void (*GLPROC_glPointParameteriv)(GLenum pname, const GLint * params);
typedef void (*GLPROC_glBlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (*GLPROC_glBlendEquation)(GLenum mode);
typedef void (*GLPROC_glGenQueries)(GLsizei n, GLuint * ids);
typedef void (*GLPROC_glDeleteQueries)(GLsizei n, const GLuint * ids);
typedef GLboolean (*GLPROC_glIsQuery)(GLuint id);
typedef void (*GLPROC_glBeginQuery)(GLenum target, GLuint id);
typedef void (*GLPROC_glEndQuery)(GLenum target);
typedef void (*GLPROC_glGetQueryiv)(GLenum target, GLenum pname, GLint * params);
typedef void (*GLPROC_glGetQueryObjectiv)(GLuint id, GLenum pname, GLint * params);
typedef void (*GLPROC_glGetQueryObjectuiv)(GLuint id, GLenum pname, GLuint * params);
typedef void (*GLPROC_glBindBuffer)(GLenum target, GLuint buffer);
typedef void (*GLPROC_glDeleteBuffers)(GLsizei n, const GLuint * buffers);
typedef void (*GLPROC_glGenBuffers)(GLsizei n, GLuint * buffers);
typedef GLboolean (*GLPROC_glIsBuffer)(GLuint buffer);
typedef void (*GLPROC_glBufferData)(GLenum target, GLsizeiptr size, const void * data, GLenum usage);
typedef void (*GLPROC_glBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (*GLPROC_glGetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void * data);
typedef void * (*GLPROC_glMapBuffer)(GLenum target, GLenum access);
typedef GLboolean (*GLPROC_glUnmapBuffer)(GLenum target);
typedef void (*GLPROC_glGetBufferParameteriv)(GLenum target, GLenum pname, GLint * params);
typedef void (*GLPROC_glGetBufferPointerv)(GLenum target, GLenum pname, void ** params);
typedef void (*GLPROC_glBlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
typedef void (*GLPROC_glDrawBuffers)(GLsizei n, const GLenum * bufs);
typedef void (*GLPROC_glStencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (*GLPROC_glStencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void (*GLPROC_glStencilMaskSeparate)(GLenum face, GLuint mask);
typedef void (*GLPROC_glAttachShader)(GLuint program, GLuint shader);
typedef void (*GLPROC_glBindAttribLocation)(GLuint program, GLuint index, const GLchar * name);
typedef void (*GLPROC_glCompileShader)(GLuint shader);
typedef GLuint (*GLPROC_glCreateProgram)();
typedef GLuint (*GLPROC_glCreateShader)(GLenum type);
typedef void (*GLPROC_glDeleteProgram)(GLuint program);
typedef void (*GLPROC_glDeleteShader)(GLuint shader);
typedef void (*GLPROC_glDetachShader)(GLuint program, GLuint shader);
typedef void (*GLPROC_glDisableVertexAttribArray)(GLuint index);
typedef void (*GLPROC_glEnableVertexAttribArray)(GLuint index);
typedef void (*GLPROC_glGetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (*GLPROC_glGetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (*GLPROC_glGetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
typedef GLint (*GLPROC_glGetAttribLocation)(GLuint program, const GLchar * name);
typedef void (*GLPROC_glGetProgramiv)(GLuint program, GLenum pname, GLint * params);
typedef void (*GLPROC_glGetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (*GLPROC_glGetShaderiv)(GLuint shader, GLenum pname, GLint * params);
typedef void (*GLPROC_glGetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (*GLPROC_glGetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
typedef GLint (*GLPROC_glGetUniformLocation)(GLuint program, const GLchar * name);
typedef void (*GLPROC_glGetUniformfv)(GLuint program, GLint location, GLfloat * params);
typedef void (*GLPROC_glGetUniformiv)(GLuint program, GLint location, GLint * params);
typedef void (*GLPROC_glGetVertexAttribdv)(GLuint index, GLenum pname, GLdouble * params);
typedef void (*GLPROC_glGetVertexAttribfv)(GLuint index, GLenum pname, GLfloat * params);
typedef void (*GLPROC_glGetVertexAttribiv)(GLuint index, GLenum pname, GLint * params);
typedef void (*GLPROC_glGetVertexAttribPointerv)(GLuint index, GLenum pname, void ** pointer);
typedef GLboolean (*GLPROC_glIsProgram)(GLuint program);
typedef GLboolean (*GLPROC_glIsShader)(GLuint shader);
typedef void (*GLPROC_glLinkProgram)(GLuint program);
typedef void (*GLPROC_glShaderSource)(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
typedef void (*GLPROC_glUseProgram)(GLuint program);
typedef void (*GLPROC_glUniform1f)(GLint location, GLfloat v0);
typedef void (*GLPROC_glUniform2f)(GLint location, GLfloat v0, GLfloat v1);
typedef void (*GLPROC_glUniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (*GLPROC_glUniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (*GLPROC_glUniform1i)(GLint location, GLint v0);
typedef void (*GLPROC_glUniform2i)(GLint location, GLint v0, GLint v1);
typedef void (*GLPROC_glUniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
typedef void (*GLPROC_glUniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (*GLPROC_glUniform1fv)(GLint location, GLsizei count, const GLfloat * value);
typedef void (*GLPROC_glUniform2fv)(GLint location, GLsizei count, const GLfloat * value);
typedef void (*GLPROC_glUniform3fv)(GLint location, GLsizei count, const GLfloat * value);
typedef void (*GLPROC_glUniform4fv)(GLint location, GLsizei count, const GLfloat * value);
typedef void (*GLPROC_glUniform1iv)(GLint location, GLsizei count, const GLint * value);
typedef void (*GLPROC_glUniform2iv)(GLint location, GLsizei count, const GLint * value);
typedef void (*GLPROC_glUniform3iv)(GLint location, GLsizei count, const GLint * value);
typedef void (*GLPROC_glUniform4iv)(GLint location, GLsizei count, const GLint * value);
typedef void (*GLPROC_glUniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (*GLPROC_glUniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (*GLPROC_glUniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (*GLPROC_glValidateProgram)(GLuint program);
typedef void (*GLPROC_glVertexAttrib1d)(GLuint index, GLdouble x);
typedef void (*GLPROC_glVertexAttrib1dv)(GLuint index, const GLdouble * v);
typedef void (*GLPROC_glVertexAttrib1f)(GLuint index, GLfloat x);
typedef void (*GLPROC_glVertexAttrib1fv)(GLuint index, const GLfloat * v);
typedef void (*GLPROC_glVertexAttrib1s)(GLuint index, GLshort x);
typedef void (*GLPROC_glVertexAttrib1sv)(GLuint index, const GLshort * v);
typedef void (*GLPROC_glVertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
typedef void (*GLPROC_glVertexAttrib2dv)(GLuint index, const GLdouble * v);
typedef void (*GLPROC_glVertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
typedef void (*GLPROC_glVertexAttrib2fv)(GLuint index, const GLfloat * v);
typedef void (*GLPROC_glVertexAttrib2s)(GLuint index, GLshort x, GLshort y);
typedef void (*GLPROC_glVertexAttrib2sv)(GLuint index, const GLshort * v);
typedef void (*GLPROC_glVertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (*GLPROC_glVertexAttrib3dv)(GLuint index, const GLdouble * v);
typedef void (*GLPROC_glVertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (*GLPROC_glVertexAttrib3fv)(GLuint index, const GLfloat * v);
typedef void (*GLPROC_glVertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (*GLPROC_glVertexAttrib3sv)(GLuint index, const GLshort * v);
typedef void (*GLPROC_glVertexAttrib4Nbv)(GLuint index, const GLbyte * v);
typedef void (*GLPROC_glVertexAttrib4Niv)(GLuint index, const GLint * v);
typedef void (*GLPROC_glVertexAttrib4Nsv)(GLuint index, const GLshort * v);
typedef void (*GLPROC_glVertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (*GLPROC_glVertexAttrib4Nubv)(GLuint index, const GLubyte * v);
typedef void (*GLPROC_glVertexAttrib4Nuiv)(GLuint index, const GLuint * v);
typedef void (*GLPROC_glVertexAttrib4Nusv)(GLuint index, const GLushort * v);
typedef void (*GLPROC_glVertexAttrib4bv)(GLuint index, const GLbyte * v);
typedef void (*GLPROC_glVertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (*GLPROC_glVertexAttrib4dv)(GLuint index, const GLdouble * v);
typedef void (*GLPROC_glVertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (*GLPROC_glVertexAttrib4fv)(GLuint index, const GLfloat * v);
typedef void (*GLPROC_glVertexAttrib4iv)(GLuint index, const GLint * v);
typedef void (*GLPROC_glVertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (*GLPROC_glVertexAttrib4sv)(GLuint index, const GLshort * v);
typedef void (*GLPROC_glVertexAttrib4ubv)(GLuint index, const GLubyte * v);
typedef void (*GLPROC_glVertexAttrib4uiv)(GLuint index, const GLuint * v);
typedef void (*GLPROC_glVertexAttrib4usv)(GLuint index, const GLushort * v);
typedef void (*GLPROC_glVertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
typedef void (*GLPROC_glUniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (*GLPROC_glUniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (*GLPROC_glUniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (*GLPROC_glUniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (*GLPROC_glUniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (*GLPROC_glUniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (*GLPROC_glColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (*GLPROC_glGetBooleani_v)(GLenum target, GLuint index, GLboolean * data);
typedef void (*GLPROC_glGetIntegeri_v)(GLenum target, GLuint index, GLint * data);
typedef void (*GLPROC_glEnablei)(GLenum target, GLuint index);
typedef void (*GLPROC_glDisablei)(GLenum target, GLuint index);
typedef GLboolean (*GLPROC_glIsEnabledi)(GLenum target, GLuint index);
typedef void (*GLPROC_glBeginTransformFeedback)(GLenum primitiveMode);
typedef void (*GLPROC_glEndTransformFeedback)();
typedef void (*GLPROC_glBindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (*GLPROC_glBindBufferBase)(GLenum target, GLuint index, GLuint buffer);
typedef void (*GLPROC_glTransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
typedef void (*GLPROC_glGetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef void (*GLPROC_glClampColor)(GLenum target, GLenum clamp);
typedef void (*GLPROC_glBeginConditionalRender)(GLuint id, GLenum mode);
typedef void (*GLPROC_glEndConditionalRender)();
typedef void (*GLPROC_glVertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (*GLPROC_glGetVertexAttribIiv)(GLuint index, GLenum pname, GLint * params);
typedef void (*GLPROC_glGetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint * params);
typedef void (*GLPROC_glVertexAttribI1i)(GLuint index, GLint x);
typedef void (*GLPROC_glVertexAttribI2i)(GLuint index, GLint x, GLint y);
typedef void (*GLPROC_glVertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
typedef void (*GLPROC_glVertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (*GLPROC_glVertexAttribI1ui)(GLuint index, GLuint x);
typedef void (*GLPROC_glVertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
typedef void (*GLPROC_glVertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (*GLPROC_glVertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (*GLPROC_glVertexAttribI1iv)(GLuint index, const GLint * v);
typedef void (*GLPROC_glVertexAttribI2iv)(GLuint index, const GLint * v);
typedef void (*GLPROC_glVertexAttribI3iv)(GLuint index, const GLint * v);
typedef void (*GLPROC_glVertexAttribI4iv)(GLuint index, const GLint * v);
typedef void (*GLPROC_glVertexAttribI1uiv)(GLuint index, const GLuint * v);
typedef void (*GLPROC_glVertexAttribI2uiv)(GLuint index, const GLuint * v);
typedef void (*GLPROC_glVertexAttribI3uiv)(GLuint index, const GLuint * v);
typedef void (*GLPROC_glVertexAttribI4uiv)(GLuint index, const GLuint * v);
typedef void (*GLPROC_glVertexAttribI4bv)(GLuint index, const GLbyte * v);
typedef void (*GLPROC_glVertexAttribI4sv)(GLuint index, const GLshort * v);
typedef void (*GLPROC_glVertexAttribI4ubv)(GLuint index, const GLubyte * v);
typedef void (*GLPROC_glVertexAttribI4usv)(GLuint index, const GLushort * v);
typedef void (*GLPROC_glGetUniformuiv)(GLuint program, GLint location, GLuint * params);
typedef void (*GLPROC_glBindFragDataLocation)(GLuint program, GLuint color, const GLchar * name);
typedef GLint (*GLPROC_glGetFragDataLocation)(GLuint program, const GLchar * name);
typedef void (*GLPROC_glUniform1ui)(GLint location, GLuint v0);
typedef void (*GLPROC_glUniform2ui)(GLint location, GLuint v0, GLuint v1);
typedef void (*GLPROC_glUniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (*GLPROC_glUniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (*GLPROC_glUniform1uiv)(GLint location, GLsizei count, const GLuint * value);
typedef void (*GLPROC_glUniform2uiv)(GLint location, GLsizei count, const GLuint * value);
typedef void (*GLPROC_glUniform3uiv)(GLint location, GLsizei count, const GLuint * value);
typedef void (*GLPROC_glUniform4uiv)(GLint location, GLsizei count, const GLuint * value);
typedef void (*GLPROC_glTexParameterIiv)(GLenum target, GLenum pname, const GLint * params);
typedef void (*GLPROC_glTexParameterIuiv)(GLenum target, GLenum pname, const GLuint * params);
typedef void (*GLPROC_glGetTexParameterIiv)(GLenum target, GLenum pname, GLint * params);
typedef void (*GLPROC_glGetTexParameterIuiv)(GLenum target, GLenum pname, GLuint * params);
typedef void (*GLPROC_glClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint * value);
typedef void (*GLPROC_glClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint * value);
typedef void (*GLPROC_glClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat * value);
typedef void (*GLPROC_glClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef const GLubyte * (*GLPROC_glGetStringi)(GLenum name, GLuint index);
typedef GLboolean (*GLPROC_glIsRenderbuffer)(GLuint renderbuffer);
typedef void (*GLPROC_glBindRenderbuffer)(GLenum target, GLuint renderbuffer);
typedef void (*GLPROC_glDeleteRenderbuffers)(GLsizei n, const GLuint * renderbuffers);
typedef void (*GLPROC_glGenRenderbuffers)(GLsizei n, GLuint * renderbuffers);
typedef void (*GLPROC_glRenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (*GLPROC_glGetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint * params);
typedef GLboolean (*GLPROC_glIsFramebuffer)(GLuint framebuffer);
typedef void (*GLPROC_glBindFramebuffer)(GLenum target, GLuint framebuffer);
typedef void (*GLPROC_glDeleteFramebuffers)(GLsizei n, const GLuint * framebuffers);
typedef void (*GLPROC_glGenFramebuffers)(GLsizei n, GLuint * framebuffers);
typedef GLenum (*GLPROC_glCheckFramebufferStatus)(GLenum target);
typedef void (*GLPROC_glFramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (*GLPROC_glFramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (*GLPROC_glFramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (*GLPROC_glFramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (*GLPROC_glGetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint * params);
typedef void (*GLPROC_glGenerateMipmap)(GLenum target);
typedef void (*GLPROC_glBlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (*GLPROC_glRenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (*GLPROC_glFramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void * (*GLPROC_glMapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (*GLPROC_glFlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (*GLPROC_glBindVertexArray)(GLuint array);
typedef void (*GLPROC_glDeleteVertexArrays)(GLsizei n, const GLuint * arrays);
typedef void (*GLPROC_glGenVertexArrays)(GLsizei n, GLuint * arrays);
typedef GLboolean (*GLPROC_glIsVertexArray)(GLuint array);
typedef void (*GLPROC_glDrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
typedef void (*GLPROC_glDrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
typedef void (*GLPROC_glTexBuffer)(GLenum target, GLenum internalformat, GLuint buffer);
typedef void (*GLPROC_glPrimitiveRestartIndex)(GLuint index);
typedef void (*GLPROC_glCopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (*GLPROC_glGetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
typedef void (*GLPROC_glGetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
typedef void (*GLPROC_glGetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
typedef GLuint (*GLPROC_glGetUniformBlockIndex)(GLuint program, const GLchar * uniformBlockName);
typedef void (*GLPROC_glGetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
typedef void (*GLPROC_glGetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
typedef void (*GLPROC_glUniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
typedef void (*GLPROC_glDrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (*GLPROC_glDrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (*GLPROC_glDrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (*GLPROC_glMultiDrawElementsBaseVertex)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
typedef void (*GLPROC_glProvokingVertex)(GLenum mode);
typedef GLsync (*GLPROC_glFenceSync)(GLenum condition, GLbitfield flags);
typedef GLboolean (*GLPROC_glIsSync)(GLsync sync);
typedef void (*GLPROC_glDeleteSync)(GLsync sync);
typedef GLenum (*GLPROC_glClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (*GLPROC_glWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (*GLPROC_glGetInteger64v)(GLenum pname, GLint64 * data);
typedef void (*GLPROC_glGetSynciv)(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
typedef void (*GLPROC_glGetInteger64i_v)(GLenum target, GLuint index, GLint64 * data);
typedef void (*GLPROC_glGetBufferParameteri64v)(GLenum target, GLenum pname, GLint64 * params);
typedef void (*GLPROC_glFramebufferTexture)(GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (*GLPROC_glTexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (*GLPROC_glTexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (*GLPROC_glGetMultisamplefv)(GLenum pname, GLuint index, GLfloat * val);
typedef void (*GLPROC_glSampleMaski)(GLuint maskNumber, GLbitfield mask);
typedef void (*GLPROC_glBindFragDataLocationIndexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
typedef GLint (*GLPROC_glGetFragDataIndex)(GLuint program, const GLchar * name);
typedef void (*GLPROC_glGenSamplers)(GLsizei count, GLuint * samplers);
typedef void (*GLPROC_glDeleteSamplers)(GLsizei count, const GLuint * samplers);
typedef GLboolean (*GLPROC_glIsSampler)(GLuint sampler);
typedef void (*GLPROC_glBindSampler)(GLuint unit, GLuint sampler);
typedef void (*GLPROC_glSamplerParameteri)(GLuint sampler, GLenum pname, GLint param);
typedef void (*GLPROC_glSamplerParameteriv)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (*GLPROC_glSamplerParameterf)(GLuint sampler, GLenum pname, GLfloat param);
typedef void (*GLPROC_glSamplerParameterfv)(GLuint sampler, GLenum pname, const GLfloat * param);
typedef void (*GLPROC_glSamplerParameterIiv)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (*GLPROC_glSamplerParameterIuiv)(GLuint sampler, GLenum pname, const GLuint * param);
typedef void (*GLPROC_glGetSamplerParameteriv)(GLuint sampler, GLenum pname, GLint * params);
typedef void (*GLPROC_glGetSamplerParameterIiv)(GLuint sampler, GLenum pname, GLint * params);
typedef void (*GLPROC_glGetSamplerParameterfv)(GLuint sampler, GLenum pname, GLfloat * params);
typedef void (*GLPROC_glGetSamplerParameterIuiv)(GLuint sampler, GLenum pname, GLuint * params);
typedef void (*GLPROC_glQueryCounter)(GLuint id, GLenum target);
typedef void (*GLPROC_glGetQueryObjecti64v)(GLuint id, GLenum pname, GLint64 * params);
typedef void (*GLPROC_glGetQueryObjectui64v)(GLuint id, GLenum pname, GLuint64 * params);
typedef void (*GLPROC_glVertexAttribDivisor)(GLuint index, GLuint divisor);
typedef void (*GLPROC_glVertexAttribP1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (*GLPROC_glVertexAttribP1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (*GLPROC_glVertexAttribP2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (*GLPROC_glVertexAttribP2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (*GLPROC_glVertexAttribP3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (*GLPROC_glVertexAttribP3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (*GLPROC_glVertexAttribP4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (*GLPROC_glVertexAttribP4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (*GLPROC_glVertexP2ui)(GLenum type, GLuint value);
typedef void (*GLPROC_glVertexP2uiv)(GLenum type, const GLuint * value);
typedef void (*GLPROC_glVertexP3ui)(GLenum type, GLuint value);
typedef void (*GLPROC_glVertexP3uiv)(GLenum type, const GLuint * value);
typedef void (*GLPROC_glVertexP4ui)(GLenum type, GLuint value);
typedef void (*GLPROC_glVertexP4uiv)(GLenum type, const GLuint * value);
typedef void (*GLPROC_glTexCoordP1ui)(GLenum type, GLuint coords);
typedef void (*GLPROC_glTexCoordP1uiv)(GLenum type, const GLuint * coords);
typedef void (*GLPROC_glTexCoordP2ui)(GLenum type, GLuint coords);
typedef void (*GLPROC_glTexCoordP2uiv)(GLenum type, const GLuint * coords);
typedef void (*GLPROC_glTexCoordP3ui)(GLenum type, GLuint coords);
typedef void (*GLPROC_glTexCoordP3uiv)(GLenum type, const GLuint * coords);
typedef void (*GLPROC_glTexCoordP4ui)(GLenum type, GLuint coords);
typedef void (*GLPROC_glTexCoordP4uiv)(GLenum type, const GLuint * coords);
typedef void (*GLPROC_glMultiTexCoordP1ui)(GLenum texture, GLenum type, GLuint coords);
typedef void (*GLPROC_glMultiTexCoordP1uiv)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (*GLPROC_glMultiTexCoordP2ui)(GLenum texture, GLenum type, GLuint coords);
typedef void (*GLPROC_glMultiTexCoordP2uiv)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (*GLPROC_glMultiTexCoordP3ui)(GLenum texture, GLenum type, GLuint coords);
typedef void (*GLPROC_glMultiTexCoordP3uiv)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (*GLPROC_glMultiTexCoordP4ui)(GLenum texture, GLenum type, GLuint coords);
typedef void (*GLPROC_glMultiTexCoordP4uiv)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (*GLPROC_glNormalP3ui)(GLenum type, GLuint coords);
typedef void (*GLPROC_glNormalP3uiv)(GLenum type, const GLuint * coords);
typedef void (*GLPROC_glColorP3ui)(GLenum type, GLuint color);
typedef void (*GLPROC_glColorP3uiv)(GLenum type, const GLuint * color);
typedef void (*GLPROC_glColorP4ui)(GLenum type, GLuint color);
typedef void (*GLPROC_glColorP4uiv)(GLenum type, const GLuint * color);
typedef void (*GLPROC_glSecondaryColorP3ui)(GLenum type, GLuint color);
typedef void (*GLPROC_glSecondaryColorP3uiv)(GLenum type, const GLuint * color);
typedef void (*GLPROC_glDebugMessageControl)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (*GLPROC_glDebugMessageInsert)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (*GLPROC_glDebugMessageCallback)(GLDEBUGPROC callback, const void * userParam);
typedef GLuint (*GLPROC_glGetDebugMessageLog)(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (*GLPROC_glPushDebugGroup)(GLenum source, GLuint id, GLsizei length, const GLchar * message);
typedef void (*GLPROC_glPopDebugGroup)();
typedef void (*GLPROC_glObjectLabel)(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
typedef void (*GLPROC_glGetObjectLabel)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (*GLPROC_glObjectPtrLabel)(const void * ptr, GLsizei length, const GLchar * label);
typedef void (*GLPROC_glGetObjectPtrLabel)(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (*GLPROC_glGetPointerv)(GLenum pname, void ** params);

extern GLPROC_glCullFace oglCullFace;
extern GLPROC_glFrontFace oglFrontFace;
extern GLPROC_glHint oglHint;
extern GLPROC_glLineWidth oglLineWidth;
extern GLPROC_glPointSize oglPointSize;
extern GLPROC_glPolygonMode oglPolygonMode;
extern GLPROC_glScissor oglScissor;
extern GLPROC_glTexParameterf oglTexParameterf;
extern GLPROC_glTexParameterfv oglTexParameterfv;
extern GLPROC_glTexParameteri oglTexParameteri;
extern GLPROC_glTexParameteriv oglTexParameteriv;
extern GLPROC_glTexImage1D oglTexImage1D;
extern GLPROC_glTexImage2D oglTexImage2D;
extern GLPROC_glDrawBuffer oglDrawBuffer;
extern GLPROC_glClear oglClear;
extern GLPROC_glClearColor oglClearColor;
extern GLPROC_glClearStencil oglClearStencil;
extern GLPROC_glClearDepth oglClearDepth;
extern GLPROC_glStencilMask oglStencilMask;
extern GLPROC_glColorMask oglColorMask;
extern GLPROC_glDepthMask oglDepthMask;
extern GLPROC_glDisable oglDisable;
extern GLPROC_glEnable oglEnable;
extern GLPROC_glFinish oglFinish;
extern GLPROC_glFlush oglFlush;
extern GLPROC_glBlendFunc oglBlendFunc;
extern GLPROC_glLogicOp oglLogicOp;
extern GLPROC_glStencilFunc oglStencilFunc;
extern GLPROC_glStencilOp oglStencilOp;
extern GLPROC_glDepthFunc oglDepthFunc;
extern GLPROC_glPixelStoref oglPixelStoref;
extern GLPROC_glPixelStorei oglPixelStorei;
extern GLPROC_glReadBuffer oglReadBuffer;
extern GLPROC_glReadPixels oglReadPixels;
extern GLPROC_glGetBooleanv oglGetBooleanv;
extern GLPROC_glGetDoublev oglGetDoublev;
extern GLPROC_glGetError oglGetError;
extern GLPROC_glGetFloatv oglGetFloatv;
extern GLPROC_glGetIntegerv oglGetIntegerv;
extern GLPROC_glGetString oglGetString;
extern GLPROC_glGetTexImage oglGetTexImage;
extern GLPROC_glGetTexParameterfv oglGetTexParameterfv;
extern GLPROC_glGetTexParameteriv oglGetTexParameteriv;
extern GLPROC_glGetTexLevelParameterfv oglGetTexLevelParameterfv;
extern GLPROC_glGetTexLevelParameteriv oglGetTexLevelParameteriv;
extern GLPROC_glIsEnabled oglIsEnabled;
extern GLPROC_glDepthRange oglDepthRange;
extern GLPROC_glViewport oglViewport;
extern GLPROC_glDrawArrays oglDrawArrays;
extern GLPROC_glDrawElements oglDrawElements;
extern GLPROC_glPolygonOffset oglPolygonOffset;
extern GLPROC_glCopyTexImage1D oglCopyTexImage1D;
extern GLPROC_glCopyTexImage2D oglCopyTexImage2D;
extern GLPROC_glCopyTexSubImage1D oglCopyTexSubImage1D;
extern GLPROC_glCopyTexSubImage2D oglCopyTexSubImage2D;
extern GLPROC_glTexSubImage1D oglTexSubImage1D;
extern GLPROC_glTexSubImage2D oglTexSubImage2D;
extern GLPROC_glBindTexture oglBindTexture;
extern GLPROC_glDeleteTextures oglDeleteTextures;
extern GLPROC_glGenTextures oglGenTextures;
extern GLPROC_glIsTexture oglIsTexture;
extern GLPROC_glDrawRangeElements oglDrawRangeElements;
extern GLPROC_glTexImage3D oglTexImage3D;
extern GLPROC_glTexSubImage3D oglTexSubImage3D;
extern GLPROC_glCopyTexSubImage3D oglCopyTexSubImage3D;
extern GLPROC_glActiveTexture oglActiveTexture;
extern GLPROC_glSampleCoverage oglSampleCoverage;
extern GLPROC_glCompressedTexImage3D oglCompressedTexImage3D;
extern GLPROC_glCompressedTexImage2D oglCompressedTexImage2D;
extern GLPROC_glCompressedTexImage1D oglCompressedTexImage1D;
extern GLPROC_glCompressedTexSubImage3D oglCompressedTexSubImage3D;
extern GLPROC_glCompressedTexSubImage2D oglCompressedTexSubImage2D;
extern GLPROC_glCompressedTexSubImage1D oglCompressedTexSubImage1D;
extern GLPROC_glGetCompressedTexImage oglGetCompressedTexImage;
extern GLPROC_glBlendFuncSeparate oglBlendFuncSeparate;
extern GLPROC_glMultiDrawArrays oglMultiDrawArrays;
extern GLPROC_glMultiDrawElements oglMultiDrawElements;
extern GLPROC_glPointParameterf oglPointParameterf;
extern GLPROC_glPointParameterfv oglPointParameterfv;
extern GLPROC_glPointParameteri oglPointParameteri;
extern GLPROC_glPointParameteriv oglPointParameteriv;
extern GLPROC_glBlendColor oglBlendColor;
extern GLPROC_glBlendEquation oglBlendEquation;
extern GLPROC_glGenQueries oglGenQueries;
extern GLPROC_glDeleteQueries oglDeleteQueries;
extern GLPROC_glIsQuery oglIsQuery;
extern GLPROC_glBeginQuery oglBeginQuery;
extern GLPROC_glEndQuery oglEndQuery;
extern GLPROC_glGetQueryiv oglGetQueryiv;
extern GLPROC_glGetQueryObjectiv oglGetQueryObjectiv;
extern GLPROC_glGetQueryObjectuiv oglGetQueryObjectuiv;
extern GLPROC_glBindBuffer oglBindBuffer;
extern GLPROC_glDeleteBuffers oglDeleteBuffers;
extern GLPROC_glGenBuffers oglGenBuffers;
extern GLPROC_glIsBuffer oglIsBuffer;
extern GLPROC_glBufferData oglBufferData;
extern GLPROC_glBufferSubData oglBufferSubData;
extern GLPROC_glGetBufferSubData oglGetBufferSubData;
extern GLPROC_glMapBuffer oglMapBuffer;
extern GLPROC_glUnmapBuffer oglUnmapBuffer;
extern GLPROC_glGetBufferParameteriv oglGetBufferParameteriv;
extern GLPROC_glGetBufferPointerv oglGetBufferPointerv;
extern GLPROC_glBlendEquationSeparate oglBlendEquationSeparate;
extern GLPROC_glDrawBuffers oglDrawBuffers;
extern GLPROC_glStencilOpSeparate oglStencilOpSeparate;
extern GLPROC_glStencilFuncSeparate oglStencilFuncSeparate;
extern GLPROC_glStencilMaskSeparate oglStencilMaskSeparate;
extern GLPROC_glAttachShader oglAttachShader;
extern GLPROC_glBindAttribLocation oglBindAttribLocation;
extern GLPROC_glCompileShader oglCompileShader;
extern GLPROC_glCreateProgram oglCreateProgram;
extern GLPROC_glCreateShader oglCreateShader;
extern GLPROC_glDeleteProgram oglDeleteProgram;
extern GLPROC_glDeleteShader oglDeleteShader;
extern GLPROC_glDetachShader oglDetachShader;
extern GLPROC_glDisableVertexAttribArray oglDisableVertexAttribArray;
extern GLPROC_glEnableVertexAttribArray oglEnableVertexAttribArray;
extern GLPROC_glGetActiveAttrib oglGetActiveAttrib;
extern GLPROC_glGetActiveUniform oglGetActiveUniform;
extern GLPROC_glGetAttachedShaders oglGetAttachedShaders;
extern GLPROC_glGetAttribLocation oglGetAttribLocation;
extern GLPROC_glGetProgramiv oglGetProgramiv;
extern GLPROC_glGetProgramInfoLog oglGetProgramInfoLog;
extern GLPROC_glGetShaderiv oglGetShaderiv;
extern GLPROC_glGetShaderInfoLog oglGetShaderInfoLog;
extern GLPROC_glGetShaderSource oglGetShaderSource;
extern GLPROC_glGetUniformLocation oglGetUniformLocation;
extern GLPROC_glGetUniformfv oglGetUniformfv;
extern GLPROC_glGetUniformiv oglGetUniformiv;
extern GLPROC_glGetVertexAttribdv oglGetVertexAttribdv;
extern GLPROC_glGetVertexAttribfv oglGetVertexAttribfv;
extern GLPROC_glGetVertexAttribiv oglGetVertexAttribiv;
extern GLPROC_glGetVertexAttribPointerv oglGetVertexAttribPointerv;
extern GLPROC_glIsProgram oglIsProgram;
extern GLPROC_glIsShader oglIsShader;
extern GLPROC_glLinkProgram oglLinkProgram;
extern GLPROC_glShaderSource oglShaderSource;
extern GLPROC_glUseProgram oglUseProgram;
extern GLPROC_glUniform1f oglUniform1f;
extern GLPROC_glUniform2f oglUniform2f;
extern GLPROC_glUniform3f oglUniform3f;
extern GLPROC_glUniform4f oglUniform4f;
extern GLPROC_glUniform1i oglUniform1i;
extern GLPROC_glUniform2i oglUniform2i;
extern GLPROC_glUniform3i oglUniform3i;
extern GLPROC_glUniform4i oglUniform4i;
extern GLPROC_glUniform1fv oglUniform1fv;
extern GLPROC_glUniform2fv oglUniform2fv;
extern GLPROC_glUniform3fv oglUniform3fv;
extern GLPROC_glUniform4fv oglUniform4fv;
extern GLPROC_glUniform1iv oglUniform1iv;
extern GLPROC_glUniform2iv oglUniform2iv;
extern GLPROC_glUniform3iv oglUniform3iv;
extern GLPROC_glUniform4iv oglUniform4iv;
extern GLPROC_glUniformMatrix2fv oglUniformMatrix2fv;
extern GLPROC_glUniformMatrix3fv oglUniformMatrix3fv;
extern GLPROC_glUniformMatrix4fv oglUniformMatrix4fv;
extern GLPROC_glValidateProgram oglValidateProgram;
extern GLPROC_glVertexAttrib1d oglVertexAttrib1d;
extern GLPROC_glVertexAttrib1dv oglVertexAttrib1dv;
extern GLPROC_glVertexAttrib1f oglVertexAttrib1f;
extern GLPROC_glVertexAttrib1fv oglVertexAttrib1fv;
extern GLPROC_glVertexAttrib1s oglVertexAttrib1s;
extern GLPROC_glVertexAttrib1sv oglVertexAttrib1sv;
extern GLPROC_glVertexAttrib2d oglVertexAttrib2d;
extern GLPROC_glVertexAttrib2dv oglVertexAttrib2dv;
extern GLPROC_glVertexAttrib2f oglVertexAttrib2f;
extern GLPROC_glVertexAttrib2fv oglVertexAttrib2fv;
extern GLPROC_glVertexAttrib2s oglVertexAttrib2s;
extern GLPROC_glVertexAttrib2sv oglVertexAttrib2sv;
extern GLPROC_glVertexAttrib3d oglVertexAttrib3d;
extern GLPROC_glVertexAttrib3dv oglVertexAttrib3dv;
extern GLPROC_glVertexAttrib3f oglVertexAttrib3f;
extern GLPROC_glVertexAttrib3fv oglVertexAttrib3fv;
extern GLPROC_glVertexAttrib3s oglVertexAttrib3s;
extern GLPROC_glVertexAttrib3sv oglVertexAttrib3sv;
extern GLPROC_glVertexAttrib4Nbv oglVertexAttrib4Nbv;
extern GLPROC_glVertexAttrib4Niv oglVertexAttrib4Niv;
extern GLPROC_glVertexAttrib4Nsv oglVertexAttrib4Nsv;
extern GLPROC_glVertexAttrib4Nub oglVertexAttrib4Nub;
extern GLPROC_glVertexAttrib4Nubv oglVertexAttrib4Nubv;
extern GLPROC_glVertexAttrib4Nuiv oglVertexAttrib4Nuiv;
extern GLPROC_glVertexAttrib4Nusv oglVertexAttrib4Nusv;
extern GLPROC_glVertexAttrib4bv oglVertexAttrib4bv;
extern GLPROC_glVertexAttrib4d oglVertexAttrib4d;
extern GLPROC_glVertexAttrib4dv oglVertexAttrib4dv;
extern GLPROC_glVertexAttrib4f oglVertexAttrib4f;
extern GLPROC_glVertexAttrib4fv oglVertexAttrib4fv;
extern GLPROC_glVertexAttrib4iv oglVertexAttrib4iv;
extern GLPROC_glVertexAttrib4s oglVertexAttrib4s;
extern GLPROC_glVertexAttrib4sv oglVertexAttrib4sv;
extern GLPROC_glVertexAttrib4ubv oglVertexAttrib4ubv;
extern GLPROC_glVertexAttrib4uiv oglVertexAttrib4uiv;
extern GLPROC_glVertexAttrib4usv oglVertexAttrib4usv;
extern GLPROC_glVertexAttribPointer oglVertexAttribPointer;
extern GLPROC_glUniformMatrix2x3fv oglUniformMatrix2x3fv;
extern GLPROC_glUniformMatrix3x2fv oglUniformMatrix3x2fv;
extern GLPROC_glUniformMatrix2x4fv oglUniformMatrix2x4fv;
extern GLPROC_glUniformMatrix4x2fv oglUniformMatrix4x2fv;
extern GLPROC_glUniformMatrix3x4fv oglUniformMatrix3x4fv;
extern GLPROC_glUniformMatrix4x3fv oglUniformMatrix4x3fv;
extern GLPROC_glColorMaski oglColorMaski;
extern GLPROC_glGetBooleani_v oglGetBooleani_v;
extern GLPROC_glGetIntegeri_v oglGetIntegeri_v;
extern GLPROC_glEnablei oglEnablei;
extern GLPROC_glDisablei oglDisablei;
extern GLPROC_glIsEnabledi oglIsEnabledi;
extern GLPROC_glBeginTransformFeedback oglBeginTransformFeedback;
extern GLPROC_glEndTransformFeedback oglEndTransformFeedback;
extern GLPROC_glBindBufferRange oglBindBufferRange;
extern GLPROC_glBindBufferBase oglBindBufferBase;
extern GLPROC_glTransformFeedbackVaryings oglTransformFeedbackVaryings;
extern GLPROC_glGetTransformFeedbackVarying oglGetTransformFeedbackVarying;
extern GLPROC_glClampColor oglClampColor;
extern GLPROC_glBeginConditionalRender oglBeginConditionalRender;
extern GLPROC_glEndConditionalRender oglEndConditionalRender;
extern GLPROC_glVertexAttribIPointer oglVertexAttribIPointer;
extern GLPROC_glGetVertexAttribIiv oglGetVertexAttribIiv;
extern GLPROC_glGetVertexAttribIuiv oglGetVertexAttribIuiv;
extern GLPROC_glVertexAttribI1i oglVertexAttribI1i;
extern GLPROC_glVertexAttribI2i oglVertexAttribI2i;
extern GLPROC_glVertexAttribI3i oglVertexAttribI3i;
extern GLPROC_glVertexAttribI4i oglVertexAttribI4i;
extern GLPROC_glVertexAttribI1ui oglVertexAttribI1ui;
extern GLPROC_glVertexAttribI2ui oglVertexAttribI2ui;
extern GLPROC_glVertexAttribI3ui oglVertexAttribI3ui;
extern GLPROC_glVertexAttribI4ui oglVertexAttribI4ui;
extern GLPROC_glVertexAttribI1iv oglVertexAttribI1iv;
extern GLPROC_glVertexAttribI2iv oglVertexAttribI2iv;
extern GLPROC_glVertexAttribI3iv oglVertexAttribI3iv;
extern GLPROC_glVertexAttribI4iv oglVertexAttribI4iv;
extern GLPROC_glVertexAttribI1uiv oglVertexAttribI1uiv;
extern GLPROC_glVertexAttribI2uiv oglVertexAttribI2uiv;
extern GLPROC_glVertexAttribI3uiv oglVertexAttribI3uiv;
extern GLPROC_glVertexAttribI4uiv oglVertexAttribI4uiv;
extern GLPROC_glVertexAttribI4bv oglVertexAttribI4bv;
extern GLPROC_glVertexAttribI4sv oglVertexAttribI4sv;
extern GLPROC_glVertexAttribI4ubv oglVertexAttribI4ubv;
extern GLPROC_glVertexAttribI4usv oglVertexAttribI4usv;
extern GLPROC_glGetUniformuiv oglGetUniformuiv;
extern GLPROC_glBindFragDataLocation oglBindFragDataLocation;
extern GLPROC_glGetFragDataLocation oglGetFragDataLocation;
extern GLPROC_glUniform1ui oglUniform1ui;
extern GLPROC_glUniform2ui oglUniform2ui;
extern GLPROC_glUniform3ui oglUniform3ui;
extern GLPROC_glUniform4ui oglUniform4ui;
extern GLPROC_glUniform1uiv oglUniform1uiv;
extern GLPROC_glUniform2uiv oglUniform2uiv;
extern GLPROC_glUniform3uiv oglUniform3uiv;
extern GLPROC_glUniform4uiv oglUniform4uiv;
extern GLPROC_glTexParameterIiv oglTexParameterIiv;
extern GLPROC_glTexParameterIuiv oglTexParameterIuiv;
extern GLPROC_glGetTexParameterIiv oglGetTexParameterIiv;
extern GLPROC_glGetTexParameterIuiv oglGetTexParameterIuiv;
extern GLPROC_glClearBufferiv oglClearBufferiv;
extern GLPROC_glClearBufferuiv oglClearBufferuiv;
extern GLPROC_glClearBufferfv oglClearBufferfv;
extern GLPROC_glClearBufferfi oglClearBufferfi;
extern GLPROC_glGetStringi oglGetStringi;
extern GLPROC_glIsRenderbuffer oglIsRenderbuffer;
extern GLPROC_glBindRenderbuffer oglBindRenderbuffer;
extern GLPROC_glDeleteRenderbuffers oglDeleteRenderbuffers;
extern GLPROC_glGenRenderbuffers oglGenRenderbuffers;
extern GLPROC_glRenderbufferStorage oglRenderbufferStorage;
extern GLPROC_glGetRenderbufferParameteriv oglGetRenderbufferParameteriv;
extern GLPROC_glIsFramebuffer oglIsFramebuffer;
extern GLPROC_glBindFramebuffer oglBindFramebuffer;
extern GLPROC_glDeleteFramebuffers oglDeleteFramebuffers;
extern GLPROC_glGenFramebuffers oglGenFramebuffers;
extern GLPROC_glCheckFramebufferStatus oglCheckFramebufferStatus;
extern GLPROC_glFramebufferTexture1D oglFramebufferTexture1D;
extern GLPROC_glFramebufferTexture2D oglFramebufferTexture2D;
extern GLPROC_glFramebufferTexture3D oglFramebufferTexture3D;
extern GLPROC_glFramebufferRenderbuffer oglFramebufferRenderbuffer;
extern GLPROC_glGetFramebufferAttachmentParameteriv oglGetFramebufferAttachmentParameteriv;
extern GLPROC_glGenerateMipmap oglGenerateMipmap;
extern GLPROC_glBlitFramebuffer oglBlitFramebuffer;
extern GLPROC_glRenderbufferStorageMultisample oglRenderbufferStorageMultisample;
extern GLPROC_glFramebufferTextureLayer oglFramebufferTextureLayer;
extern GLPROC_glMapBufferRange oglMapBufferRange;
extern GLPROC_glFlushMappedBufferRange oglFlushMappedBufferRange;
extern GLPROC_glBindVertexArray oglBindVertexArray;
extern GLPROC_glDeleteVertexArrays oglDeleteVertexArrays;
extern GLPROC_glGenVertexArrays oglGenVertexArrays;
extern GLPROC_glIsVertexArray oglIsVertexArray;
extern GLPROC_glDrawArraysInstanced oglDrawArraysInstanced;
extern GLPROC_glDrawElementsInstanced oglDrawElementsInstanced;
extern GLPROC_glTexBuffer oglTexBuffer;
extern GLPROC_glPrimitiveRestartIndex oglPrimitiveRestartIndex;
extern GLPROC_glCopyBufferSubData oglCopyBufferSubData;
extern GLPROC_glGetUniformIndices oglGetUniformIndices;
extern GLPROC_glGetActiveUniformsiv oglGetActiveUniformsiv;
extern GLPROC_glGetActiveUniformName oglGetActiveUniformName;
extern GLPROC_glGetUniformBlockIndex oglGetUniformBlockIndex;
extern GLPROC_glGetActiveUniformBlockiv oglGetActiveUniformBlockiv;
extern GLPROC_glGetActiveUniformBlockName oglGetActiveUniformBlockName;
extern GLPROC_glUniformBlockBinding oglUniformBlockBinding;
extern GLPROC_glDrawElementsBaseVertex oglDrawElementsBaseVertex;
extern GLPROC_glDrawRangeElementsBaseVertex oglDrawRangeElementsBaseVertex;
extern GLPROC_glDrawElementsInstancedBaseVertex oglDrawElementsInstancedBaseVertex;
extern GLPROC_glMultiDrawElementsBaseVertex oglMultiDrawElementsBaseVertex;
extern GLPROC_glProvokingVertex oglProvokingVertex;
extern GLPROC_glFenceSync oglFenceSync;
extern GLPROC_glIsSync oglIsSync;
extern GLPROC_glDeleteSync oglDeleteSync;
extern GLPROC_glClientWaitSync oglClientWaitSync;
extern GLPROC_glWaitSync oglWaitSync;
extern GLPROC_glGetInteger64v oglGetInteger64v;
extern GLPROC_glGetSynciv oglGetSynciv;
extern GLPROC_glGetInteger64i_v oglGetInteger64i_v;
extern GLPROC_glGetBufferParameteri64v oglGetBufferParameteri64v;
extern GLPROC_glFramebufferTexture oglFramebufferTexture;
extern GLPROC_glTexImage2DMultisample oglTexImage2DMultisample;
extern GLPROC_glTexImage3DMultisample oglTexImage3DMultisample;
extern GLPROC_glGetMultisamplefv oglGetMultisamplefv;
extern GLPROC_glSampleMaski oglSampleMaski;
extern GLPROC_glBindFragDataLocationIndexed oglBindFragDataLocationIndexed;
extern GLPROC_glGetFragDataIndex oglGetFragDataIndex;
extern GLPROC_glGenSamplers oglGenSamplers;
extern GLPROC_glDeleteSamplers oglDeleteSamplers;
extern GLPROC_glIsSampler oglIsSampler;
extern GLPROC_glBindSampler oglBindSampler;
extern GLPROC_glSamplerParameteri oglSamplerParameteri;
extern GLPROC_glSamplerParameteriv oglSamplerParameteriv;
extern GLPROC_glSamplerParameterf oglSamplerParameterf;
extern GLPROC_glSamplerParameterfv oglSamplerParameterfv;
extern GLPROC_glSamplerParameterIiv oglSamplerParameterIiv;
extern GLPROC_glSamplerParameterIuiv oglSamplerParameterIuiv;
extern GLPROC_glGetSamplerParameteriv oglGetSamplerParameteriv;
extern GLPROC_glGetSamplerParameterIiv oglGetSamplerParameterIiv;
extern GLPROC_glGetSamplerParameterfv oglGetSamplerParameterfv;
extern GLPROC_glGetSamplerParameterIuiv oglGetSamplerParameterIuiv;
extern GLPROC_glQueryCounter oglQueryCounter;
extern GLPROC_glGetQueryObjecti64v oglGetQueryObjecti64v;
extern GLPROC_glGetQueryObjectui64v oglGetQueryObjectui64v;
extern GLPROC_glVertexAttribDivisor oglVertexAttribDivisor;
extern GLPROC_glVertexAttribP1ui oglVertexAttribP1ui;
extern GLPROC_glVertexAttribP1uiv oglVertexAttribP1uiv;
extern GLPROC_glVertexAttribP2ui oglVertexAttribP2ui;
extern GLPROC_glVertexAttribP2uiv oglVertexAttribP2uiv;
extern GLPROC_glVertexAttribP3ui oglVertexAttribP3ui;
extern GLPROC_glVertexAttribP3uiv oglVertexAttribP3uiv;
extern GLPROC_glVertexAttribP4ui oglVertexAttribP4ui;
extern GLPROC_glVertexAttribP4uiv oglVertexAttribP4uiv;
extern GLPROC_glVertexP2ui oglVertexP2ui;
extern GLPROC_glVertexP2uiv oglVertexP2uiv;
extern GLPROC_glVertexP3ui oglVertexP3ui;
extern GLPROC_glVertexP3uiv oglVertexP3uiv;
extern GLPROC_glVertexP4ui oglVertexP4ui;
extern GLPROC_glVertexP4uiv oglVertexP4uiv;
extern GLPROC_glTexCoordP1ui oglTexCoordP1ui;
extern GLPROC_glTexCoordP1uiv oglTexCoordP1uiv;
extern GLPROC_glTexCoordP2ui oglTexCoordP2ui;
extern GLPROC_glTexCoordP2uiv oglTexCoordP2uiv;
extern GLPROC_glTexCoordP3ui oglTexCoordP3ui;
extern GLPROC_glTexCoordP3uiv oglTexCoordP3uiv;
extern GLPROC_glTexCoordP4ui oglTexCoordP4ui;
extern GLPROC_glTexCoordP4uiv oglTexCoordP4uiv;
extern GLPROC_glMultiTexCoordP1ui oglMultiTexCoordP1ui;
extern GLPROC_glMultiTexCoordP1uiv oglMultiTexCoordP1uiv;
extern GLPROC_glMultiTexCoordP2ui oglMultiTexCoordP2ui;
extern GLPROC_glMultiTexCoordP2uiv oglMultiTexCoordP2uiv;
extern GLPROC_glMultiTexCoordP3ui oglMultiTexCoordP3ui;
extern GLPROC_glMultiTexCoordP3uiv oglMultiTexCoordP3uiv;
extern GLPROC_glMultiTexCoordP4ui oglMultiTexCoordP4ui;
extern GLPROC_glMultiTexCoordP4uiv oglMultiTexCoordP4uiv;
extern GLPROC_glNormalP3ui oglNormalP3ui;
extern GLPROC_glNormalP3uiv oglNormalP3uiv;
extern GLPROC_glColorP3ui oglColorP3ui;
extern GLPROC_glColorP3uiv oglColorP3uiv;
extern GLPROC_glColorP4ui oglColorP4ui;
extern GLPROC_glColorP4uiv oglColorP4uiv;
extern GLPROC_glSecondaryColorP3ui oglSecondaryColorP3ui;
extern GLPROC_glSecondaryColorP3uiv oglSecondaryColorP3uiv;
extern GLPROC_glDebugMessageControl oglDebugMessageControl;
extern GLPROC_glDebugMessageInsert oglDebugMessageInsert;
extern GLPROC_glDebugMessageCallback oglDebugMessageCallback;
extern GLPROC_glGetDebugMessageLog oglGetDebugMessageLog;
extern GLPROC_glPushDebugGroup oglPushDebugGroup;
extern GLPROC_glPopDebugGroup oglPopDebugGroup;
extern GLPROC_glObjectLabel oglObjectLabel;
extern GLPROC_glGetObjectLabel oglGetObjectLabel;
extern GLPROC_glObjectPtrLabel oglObjectPtrLabel;
extern GLPROC_glGetObjectPtrLabel oglGetObjectPtrLabel;
extern GLPROC_glGetPointerv oglGetPointerv;

void LoadGL();
